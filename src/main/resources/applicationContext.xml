<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd "
	default-lazy-init="true">


	<!-- 支持上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- set the max upload size100MB -->
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="cetc.software.chinahg.dynamicds.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="Default" value-ref="defaultDataSource" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="defaultDataSource" />
	</bean>


	<context:annotation-config />
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="cetc.software.chinahg.*" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					cetc.software.chinahg.util.ServerDialect
				</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<prop key="hibernate.transaction.auto_close_session">true</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>cetc.software.chinahg.data.dataobject</value>
			</list>
		</property>

	<!-- <property name="annotatedClasses"> <list> <value>nju.software.tjfyrmpsy.data.dataobject.RmpsyBonusDO</value> 
		<value>nju.software.tjfyrmpsy.data.dataobject.RmpsyBonusActivityDO </value> 
		<value>nju.software.tjfyrmpsy.data.dataobject.RmpsySppcDO</value> </list> 
		</property> -->
	</bean>


	<!-- 事务管理器配置 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 加入spring提供的事务管理机制，线程绑定session -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置事务的传播特性 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="*" propagation="REQUIRED" /> </tx:attributes> 
		</tx:advice> 配置事务拦截器拦截哪些类的哪些方法,一般设置成拦截Service <aop:config> <aop:pointcut 
		id="bussinessService" expression="execution(public * nju.edu.software.tjfyrmpsy.service.*.*(..))" 
		/> <aop:advisor pointcut-ref="bussinessService" advice-ref="txAdvice" /> 
		</aop:config> <bean id="baseTxService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" 
		abstract="true"> <property name="transactionManager" ref="transactionManager" 
		/> <property name="proxyTargetClass" value="true" /> <property name="transactionAttributes"> 
		<props> <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop> <prop key="find*">PROPAGATION_REQUIRED,readOnly</prop> 
		<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop> <prop key="save*">PROPAGATION_REQUIRED</prop> 
		<prop key="update*">PROPAGATION_REQUIRED</prop> <prop key="remove*">PROPAGATION_REQUIRED</prop> 
		</props> </property> </bean> -->
</beans>